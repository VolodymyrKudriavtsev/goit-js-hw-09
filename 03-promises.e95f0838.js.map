{"mappings":"YAkBA,SAASA,EAAUC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC7BC,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,CAG5D,SAASI,EAAQN,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC3BC,QAAQC,IAAI,sBAAqCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,CAGzD,IAAIK,EAAQ,IAERC,EAAU,EAEVC,EAAW,EAEfN,QAAQC,IAAI,yBAA2BM,KAAKC,OAE5C,IAAMC,EAAaC,aAAY,WAlC/B,IAAuBZ,EAAUC,EACzBY,EAkCNN,GAAW,GAnCUP,EAoCrBQ,GAAY,EApCmBP,EAqC/BK,GAVS,IA1BHO,EAAgBC,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,CAAEjB,WAAUC,UACpBC,QAAQC,IAAIM,KAAKC,SAEjBQ,EAAO,CAAElB,WAAUC,UACnBC,QAAQC,IAAIM,KAAKC,O,GAElB,E,KA2B0BU,KAAKtB,GAAWuB,MAAMhB,GAV1C,IAYPE,GACFe,cAAcX,E,GAfP,I","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        console.log(Date.now());\n      } else {\n        reject({ position, delay });\n        console.log(Date.now());\n      }\n    }, 0);\n  });\n}\n\n// createPromise(2, 1500).then(onSuccess).catch(onError);\n\nfunction onSuccess({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nlet DELAY = 2000;\nlet STEP = 1000;\nlet COUNTER = 0;\nlet AMOUNT = 3;\nlet POSITION = 0;\n\nconsole.log('START  INTERVAL !!! - ' + Date.now());\n\nconst intervalId = setInterval(() => {\n  COUNTER += 1;\n  POSITION += 1;\n  DELAY += STEP;\n\n  createPromise(POSITION, DELAY).then(onSuccess).catch(onError);\n\n  if (COUNTER === AMOUNT) {\n    clearInterval(intervalId);\n    return;\n  }\n}, STEP);\n"],"names":["$ce04d3a99e08e73b$var$onSuccess","param","position","delay","console","log","concat","$ce04d3a99e08e73b$var$onError","$ce04d3a99e08e73b$var$DELAY","$ce04d3a99e08e73b$var$COUNTER","$ce04d3a99e08e73b$var$POSITION","Date","now","$ce04d3a99e08e73b$var$intervalId","setInterval","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","catch","clearInterval"],"version":3,"file":"03-promises.e95f0838.js.map"}